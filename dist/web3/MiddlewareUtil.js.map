{"version":3,"file":"MiddlewareUtil.js","sourceRoot":"","sources":["../../src/web3/MiddlewareUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * List of rpc errors caused by the user rejecting a certain action.\n */\nconst USER_REJECTED_ERRORS = ['user rejected', 'user denied', 'user cancelled'];\n\nconst USER_REJECTED_ERROR_CODE = 4001;\n\nexport const NOTIFICATION_NAMES = {\n  accountsChanged: 'digitalwallet_accountsChanged',\n  unlockStateChanged: 'digitalwallet_unlockStateChanged',\n  chainChanged: 'digitalwallet_chainChanged',\n};\n\n/**\n * Returns a middleware that appends the DApp origin to request\n * @param {{ origin: string }} opts - The middleware options\n * @returns {Function}\n */\nexport function createOriginMiddleware(opts: any) {\n  return function originMiddleware(\n    /** @type {any} */ req: any,\n    /** @type {any} */ _: any,\n    /** @type {Function} */ next: any\n  ) {\n    req.origin = opts.origin;\n\n    // web3-provider-engine compatibility\n    // TODO:provider delete this after web3-provider-engine deprecation\n    if (!req.params) {\n      req.params = [];\n    }\n\n    next();\n  };\n}\n\n/**\n * Checks if the error code or message contains a user rejected error\n * @param {String} errorMessage\n * @returns {boolean}\n */\nfunction containsUserRejectedError(errorMessage: any, errorCode: any) {\n  try {\n    if (!errorMessage || !(typeof errorMessage === 'string')) return false;\n\n    const userRejectedErrorMessage = USER_REJECTED_ERRORS.some((userRejectedError) =>\n      errorMessage.toLowerCase().includes(userRejectedError.toLowerCase())\n    );\n\n    if (userRejectedErrorMessage) return true;\n\n    if (errorCode === USER_REJECTED_ERROR_CODE) return true;\n\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Returns a middleware that logs RPC activity\n * @returns {Function}\n */\nexport function createLoggerMiddleware() {\n  return function loggerMiddleware(\n    /** @type {any} */ req: any,\n    /** @type {any} */ res: any,\n    /** @type {Function} */ next: any\n  ) {\n    next((/** @type {Function} */ cb: any) => {\n      if (res.error) {\n        const { error, ...resWithoutError } = res;\n        if (error) {\n          if (!containsUserRejectedError(error.message, error.code)) {\n            /**\n             * Example of a rpc error:\n             * { \"code\":-32603,\n             *   \"message\":\"Internal JSON-RPC error.\",\n             *   \"data\":{\"code\":-32000,\"message\":\"******\"}\n             * }\n             */\n            let errorToLog = error;\n            const errorParams = {\n              message: 'Error in RPC response',\n              orginalError: error,\n              res: resWithoutError,\n            };\n\n            if (error.message) {\n              errorToLog = new Error(error.message);\n            }\n\n            if (error.data) {\n              // @ts-expect-error TS(2339): Property 'data' does not exist on type '{ message:... Remove this comment to see the full error message\n              errorParams.data = error.data;\n\n              if (error.data.message) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                errorToLog = new Error(error.data.message);\n              }\n            }\n          }\n        }\n      }\n      if (req.isDigitalWalletInternal) {\n        return;\n      }\n\n      cb();\n    });\n  };\n}\n"]}