{"version":3,"file":"BridgePort.js","sourceRoot":"","sources":["../../src/web3/BridgePort.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { NOTIFICATION_NAMES } from './MiddlewareUtil';\nimport { JS_IFRAME_POST_MESSAGE_TO_PROVIDER, JS_POST_MESSAGE_TO_PROVIDER } from './WebviewScripts';\n\nclass WebviewPort extends EventEmitter {\n  private _window: any;\n\n  private _isMainFrame: boolean;\n\n  constructor(window: any, isMainFrame: boolean) {\n    super();\n    this._window = window;\n    this._isMainFrame = isMainFrame;\n  }\n\n  postMessage = (msg: any, origin = '*') => {\n    const js = this._isMainFrame\n      ? JS_POST_MESSAGE_TO_PROVIDER(msg, origin)\n      : JS_IFRAME_POST_MESSAGE_TO_PROVIDER(msg, origin);\n    if (this._window.webViewRef && this._window.webViewRef.current) {\n      this._window && this._window.injectJavaScript(js);\n    }\n  };\n}\n\nclass WalletConnectPort extends EventEmitter {\n  private _wcRequestActions: any;\n\n  private serviceManager: any;\n\n  constructor(wcRequestActions: any, serviceManager: any) {\n    super();\n    this._wcRequestActions = wcRequestActions;\n    this.serviceManager = serviceManager;\n  }\n\n  postMessage = (msg: any) => {\n    try {\n      if (msg?.data?.method === NOTIFICATION_NAMES.chainChanged) {\n        const selectedAddress = this.serviceManager\n          ?.getServiceByName('PreferencesService')\n          .getSelectedAddress()\n          ?.toLowerCase();\n        this._wcRequestActions?.updateSession?.({\n          chainId: parseInt(msg.data.params.chainId, 16),\n          accounts: [selectedAddress],\n        });\n      } else if (msg?.data?.method === NOTIFICATION_NAMES.accountsChanged) {\n        const chainId = this.serviceManager?.getServiceByName('NetworkService').provider?.chainId;\n        this._wcRequestActions?.updateSession?.({\n          chainId: parseInt(chainId, 10),\n          accounts: msg.data.params,\n        });\n      } else if (msg?.data?.method === NOTIFICATION_NAMES.unlockStateChanged) {\n        // WC DOESN'T NEED THIS EVENT\n      } else if (msg?.data?.error) {\n        this._wcRequestActions?.rejectRequest?.({\n          id: msg.data.id,\n          error: msg.data.error,\n        });\n      } else {\n        this._wcRequestActions?.approveRequest?.({\n          id: msg.data.id,\n          result: msg.data.result,\n        });\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n}\nexport { WebviewPort, WalletConnectPort };\n"]}