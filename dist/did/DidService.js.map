{"version":3,"file":"DidService.js","sourceRoot":"","sources":["../../src/did/DidService.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  DidManager,\n  IonDidCreaterNoChallenge,\n  IonDidCreaterNoRegistered,\n  IonDidCreaterWithChallenge,\n  IonDidResolver,\n} from 'dw-did-sdk';\n\nimport { AbstractAdapter, IConfig, IState } from '../core/AbstractAdapter';\nimport { AbstractService } from '../core/AbstractService';\nimport DidModel from './DidModel';\nimport urljoin from './url-join/url-join';\n\nexport interface DidConfig extends IConfig {\n  selectCreator: string;\n  urlOperation: string;\n  urlResolve: string;\n}\n\nexport interface DidState extends IState {\n  didModel?: DidModel | null;\n  did?: string | null;\n}\n\nexport class DidService<A extends AbstractAdapter<DidState, DidConfig>> extends AbstractService<\n  A,\n  DidState,\n  DidConfig\n> {\n  override name = 'DidService';\n\n  private didManager: DidManager | undefined;\n\n  static RESERVE_ID = {\n    RECOVERY: '@RECOVERY',\n    UPDATE: '@UPDATE',\n  };\n\n  initialize(config: Partial<DidConfig> | undefined): void {\n    const selectCreator = config?.selectCreator;\n    const urlOperation = config?.urlOperation;\n    const urlResolve = config?.urlResolve;\n    if (typeof urlOperation === 'string') {\n      this.didManager = new DidManager(\n        [\n          new IonDidCreaterWithChallenge(\n            urljoin(urlOperation, 'operations'),\n            urljoin(urlOperation, 'proof-of-work-challenge')\n          ),\n          new IonDidCreaterNoRegistered(),\n          new IonDidCreaterNoChallenge(urljoin(urlOperation, 'operations')),\n        ],\n        [new IonDidResolver(urlResolve)]\n      );\n      if (selectCreator != null) {\n        this.didManager.setCreaterDefault(selectCreator);\n      }\n    }\n  }\n\n  async createDid(primaryKey: string) {\n    if (!this.didManager) {\n      return;\n    }\n    // DID発行\n    try {\n      const didObject = await this.didManager.createDid({\n        signingKeyId: primaryKey,\n      });\n\n      const resp = DidModel.createByDidObject(didObject);\n      if (resp) {\n        const { scheme, method, didSuffix } = resp;\n        let did;\n        if (scheme && method && didSuffix) {\n          did = `${scheme}:${method}:${didSuffix}`;\n        }\n        // DID Modelを保存\n        this.updateState({\n          didModel: resp,\n          did,\n        });\n      }\n      // eslint-disable-next-line consistent-return\n      return resp;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async resolveDid(did: string): Promise<string> {\n    const { didModel } = this.getState();\n    if (!this.didManager) {\n      return '';\n    }\n    const resolveDid = await this.didManager.resolveDid(did);\n    const resolveResponse = JSON.stringify(resolveDid, null, 2);\n    if (didModel?.published) {\n      if (resolveDid.didDocumentMetadata.method.published) {\n        // publishedの更新\n        didModel.published = true;\n        this.updateState({\n          didModel,\n        });\n      }\n    }\n    return resolveResponse;\n  }\n\n  clearDid() {\n    this.updateState({ didModel: null, did: null });\n  }\n\n  /**\n   * did\n   * @param did\n   */\n  setDid(did: string) {\n    this.updateState({ did });\n  }\n}\n\nexport default DidService;\n"]}